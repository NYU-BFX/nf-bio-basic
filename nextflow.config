// path to the current directory
def currentDir = new File(System.getProperty("user.dir")).getCanonicalPath()
// default conda installation in local directory
String condaDir = "${currentDir}/conda"
params.condaDir = condaDir
def condaActivate = "${condaDir}/bin/activate"

params.container = "nextflow/rnaseq-nf"
params.queue = "cpu_short" // queue on NYU Big Purple cluster
executor.queueSize = 1

profiles {
    standard {
        docker.enabled = true
        process.container = "${params.container}"
    }

    conda {
        // assuming 'conda' not globally available on system, use the one installed in current dir
        process.beforeScript = "unset PYTHONHOME; unset PYTHONPATH; export PATH=${params.condaDir}:\$PATH"
        process.conda = "env.yml"
    }

    slurm {
        executor.queueSize = 5
        process.executor = "slurm"
        process.queue = params.queue
        process.clusterOptions = "--export=NONE"
    }

    slurmConda {
        // conda needs to be in PATH for parent Nextflow process !!
        process.conda = "env.yml"
        executor.queueSize = 5
        process.executor = "slurm"
        process.queue = params.queue
        // only export the parent process's PATH, no other variables
        process.clusterOptions = "--export=NONE --export=PATH"
    }

    sge {
        executor.queueSize = 5
        process.executor = "sge"
    }

    sgeConda {
        process.conda = "env.yml"
        process.beforeScript = "unset PYTHONHOME; unset PYTHONPATH; source ${condaActivate}"
        executor.queueSize = 5
        process.executor = "sge"
    }
}


trace {
    enabled = true
    fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes"
    file = "trace.txt"
    raw = true
}
